@model ThreadReplyViewModel

<div id="ThreadReplyEditor" class="row">
    @using (Ajax.BeginForm("PostReply", "Forum", new { area = "Forums", id = Model.ThreadID },
        new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "ThreadReplyResult",
            OnBegin = "Selama.Core.SpinShield.raiseShield",
            OnComplete = "Selama.Core.SpinShield.lowerShield",
            OnSuccess = "Selama.Forums.OnPostReplyClickSuccessCallback",
            OnFailure = "Selama.Forums.OnPostReplyClickErrorCallback"
        },
        new { id = "ThreadReplyEditorForm" })
    )
    {
        @Html.AntiForgeryToken()

        @Html.EditorFor(model => model.ThreadID)

        <div class="form-horizontal">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Content, new { @class = "col-md-1 control-label" })
                <div class="col-md-11">
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    <div class="markdown-wrap">
                        @Html.TextAreaFor(model => model.Content, new { @class = "form-control mdd_editor" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-1 col-md-2">
                    <input type="submit" value="Post" class="btn btn-default" />
                    <div id="ReplyCancelBtn" class="btn btn-default">
                        Cancel
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@Styles.Render("~/Content/MarkdownDeep/css")
@Scripts.Render("~/bundles/MarkdownDeep")
<script type="text/javascript">
    var Selama = Selama || {};
    Selama.Forums = Selama.Forums || {};
    Selama.Forums.OnPostReplyClickSuccessCallback = function Selama_Forums_OnPostClickSuccess(response)
    {
        var redirectLocation = '@Url.Action("Thread", new { area = "Forums", id = Model.ThreadID, page = "-1" })';
        window.location.href = redirectLocation + $(response).find(".anchor").attr("href");
    };

    Selama.Forums.OnPostReplyClickErrorCallback = function Selama_Forums_OnPostClickError(response)
    {
        if (response.statusText === "Thread is locked")
        {
            Selama.Core.Alert.raiseAlert("The thread you're trying to reply to is locked from editing.", "Thread is locked");
        }
        else
        {
            Selama.Core.Alert.raiseAlert("An unexpected error occurred.");
        }
    };

    Selama.Forums.OnCancelBtnClickCallback = function Selma_Forums_OnCancelClick()
    {
        $("#ThreadReplyEditor").effect("blind");
    };

    $(document).ready(function ()
    {
        $("#ReplyCancelBtn").on("click", "", Selama.Forums.OnCancelBtnClickCallback);
    });
</script>
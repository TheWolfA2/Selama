@model Selama.Areas.Forums.ViewModels.ThreadCreateViewModel

@{
    ViewBag.Title = "CreateThread";
}

@section Scripts {
    @Scripts.Render("~/bundles/MarkdownDeep")
    @Styles.Render("~/Content/MarkdownDeep/css")
    <script type="text/javascript">
        // Define the link to the help html
        var Selama = Selama || {};
        Selama.MarkdownEditor = Selama.MarkdownEditor || {};
        Selama.MarkdownEditor.HelpLocation = '@Url.Content("~/Content/MarkdownDeep/mdd_help.htm")';
    </script>
}

<h2>CreateThread</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ThreadCreateViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="display: table; width: 100%;">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control mdd_editor" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

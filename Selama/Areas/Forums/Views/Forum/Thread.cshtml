@using Selama.Areas.Forums.Models;
@using Selama.ViewModels;
@model ThreadViewModel
@{
    ViewBag.Title = Model.Title;
}

@section MetaData {
    @Html.OpenGraphProtocolMetaTag("title", Model.Title)
    @Html.OpenGraphProtocolMetaTag("type", "website")
    @Html.OpenGraphProtocolMetaTag("url", Request.Url.ToString())
}

@section Styles {
    @Styles.Render("~/Content/MarkdownDeep/css")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Selama-Forums")
    <script type="text/javascript">
        $(document).ready(function ()
        {
            $.validator.unobtrusive.parse($("form[data-ajax='true']"));
            $(".btn.btn-post-reply").on("click", "", Selama.Forums.Thread.OnPostReplyClickCallback);

            // #region Thread & Reply edit/delete clicks
            $("body")
                .on("click", ".row.thread-post[data-thread] .post-options-list .thread-post-edit",
                    {
                        url: '@Url.Action("EditThread", "Forum", new { area = "Forums", id = Model.ID })',
                    },
                    Selama.Forums.Thread.OnThreadEditLinkClickCallback
                )
                .on("click", ".thread-post-delete", Selama.Forums.Thread.OnThreadDeleteLinkClickCallback);
            $("body")
                .on("click", ".row.thread-post[data-thread-reply] .post-options-list .thread-post-edit",
                    {
                        url: '@Url.Action("EditReply", "Forum", new { area = "Forums" })',
                    },
                    Selama.Forums.Thread.OnReplyEditLinkClickCallback
                )
                .on("click", ".thread-post-delete", Selama.Forums.Thread.OnReplyDeleteLinkClickCallback);
            // #endregion

            $("body").on(
                "click", ".row.thread-post .post-options-list .thread-post-quote",
                {
                    replyUrl: '@Url.Action("GetReplyQuote", "Forum", new { area = "Forums", page = Model.ViewPageNum })',
                    threadUrl: '@Url.Action("GetThreadQuote", new { area = "Forums", id = Model.ID })',
                },
                Selama.Forums.Thread.OnQuoteBtnClickCallback
            );

            $("#ThreadReplyEditModal, #ThreadEditModal").on("shown.bs.modal", Selama.Forums.Thread.OnEditorModalShownCallback);
            $("#ThreadDeleteModal form", "#ReplyDeleteModal form").submit(Selama.Forums.Thread.OnDeleteFormSubmitClickCallback);

            $(".row.thread-reply:last").addClass("last");
            $("#ThreadReplyEditor").hide();
            $("[data-toggle='tooltip']").tooltip();
        });
    </script>
}

<ul class="breadcrumb">
    <li>
        @Html.ActionLink("Forums", "Index", "Forum", new { area = "Forums" }, null)
    </li>
    <li>
        @Html.ActionLink(Model.ForumName, "Threads", "Forum", new { area = "Forums", id = Model.ForumID }, null)
    </li>
    <li class="active">
        @Model.Title
    </li>
</ul>

<h2>
    @if (Model.IsPinned)
    { <text>[Pinned] </text>;
    }@Model.Title @if (Model.IsLocked)
    { <i class="fa fa-lock"></i>}
</h2>

@if (!string.IsNullOrWhiteSpace(ViewBag.Message))
{
    <div class="alert alert-warning alert-icontext">
        <span class="fa fa-2x fa-exclamation-circle"></span>
        <span>@ViewBag.Message</span>
    </div>
}

@if (Thread.CanPinOrLockThreads(User))
{
    string action;
    <div class="row">
        <div class="col-sm-3 col-md-3" style="padding: 0;">
            @if (Model.IsLocked)
            {
                action = "Unlock";
            }
            else
            {
                action = "Lock";
            }
            @using (Html.BeginForm(action + "Thread", "Forum", new { id = Model.ID, page = Model.ViewPageNum }, FormMethod.Post, new { style = "display: inline-block;" }))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-default btn-icontext">
                    <span class="fa fa-@(action.ToLower())"></span>
                    <span>@action</span>
                </button>
            }
            @if (Model.IsPinned)
            {
                action = "Unpin";
            }
            else
            {
                action = "Pin";
            }
            @using (Html.BeginForm(action + "Thread", "Forum", new { id = Model.ID, page = Model.ViewPageNum }, FormMethod.Post, new { style = "display: inline-block;" }))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-default btn-icontext">
                    <span class="fa fa-thumb-tack"></span>
                    <span>@action</span>
                </button>
            }
        </div>
    </div>
}
<div class="row pager-row">
    <div class="col-sm-3 col-md-3" style="padding: 0;">
        @if (!Model.IsLocked)
        {
            <div class="btn btn-default btn-post-reply">
                Add Reply
            </div>
        }
    </div>
    <div class="col-sm-9 col-md-9" style="padding: 0;">
        @Html.Partial("_PagerPartial", new PagerViewModel(Model))
    </div>
</div>

@if (Model.ViewPageNum == 1)
{
    @Html.Partial("DisplayTemplates/ThreadPostViewModel", new ThreadPostViewModel(Model))
}

@foreach (var reply in Model.Replies)
{
    @Html.DisplayFor(model => reply)
}

<div id="ThreadReplyResult"></div>

<div class="row pager-row">
    <div class="col-sm-3 col-md-3" style="padding: 0;">
        @if (!Model.IsLocked)
        {
            <div class="btn btn-default btn-post-reply">
                Add Reply
            </div>
        }
    </div>
    <div class="col-sm-9 col-md-9" style="padding: 0;">
        @Html.Partial("_PagerPartial", new PagerViewModel(Model))
    </div>
</div>

@if (!Model.IsLocked)
{
    @Html.Partial("EditorTemplates/ThreadReplyViewModel", new ThreadReplyViewModel { ThreadID = Model.ID })
}

<div id="ModalContainer">
    <div id="ThreadEditModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        Edit Thread
                    </h4>
                </div>
                @using (Ajax.BeginForm("EditThread", "Forum", new { area = "Forums", id = Model.ID }, new AjaxOptions
                {
                    OnBegin = "Selama.Forums.OnAjaxRequestBeginCallback",
                    OnComplete = "Selama.Forums.OnAjaxRequestCompleteCallback",
                    OnSuccess = "Selama.Forums.Thread.OnThreadUpdateRequestSuccessCallback",
                    OnFailure = "Selama.Forums.Thread.OnThreadUpdateRequestFailureCallback"
                }))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-body">
                        The editor goes here
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            Update
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Close
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="ThreadReplyEditModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        Edit reply
                    </h4>
                </div>
                @using (Ajax.BeginForm("EditReply", "Forum", new { area = "Forums" }, new AjaxOptions
                {
                    OnBegin = "Selama.Forums.OnAjaxRequestBeginCallback",
                    OnComplete = "Selama.Forums.OnAjaxRequestCompleteCallback",
                    OnFailure = "Selama.Forums.Thread.OnReplyUpdateRequestFailureCallback",
                    OnSuccess = "Selama.Forums.Thread.OnReplyUpdateRequestSuccessCallback",
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                    <div class="modal-body">
                        The content goes here
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            Update
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Close
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="ThreadDeleteModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        Confirm delete
                    </h4>
                </div>
                @using (Html.BeginForm("DeleteThread", "Forum", new { area = "Forums", id = Model.ID, page = Model.ViewPageNum }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-body">
                        Are you sure you want to delete this thread?
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            OK
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Cancel
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="ReplyDeleteModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">
                        Confirm delete
                    </h4>
                </div>
                @using (Html.BeginForm("DeleteReply", "Forum", new { area = "Forums", threadId = Model.ID, page = Model.ViewPageNum }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" id="id" name="id" />

                    <div class="modal-body">
                        Are you sure you want to delete this reply?
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            OK
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Cancel
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
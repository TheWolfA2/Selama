@using Selama.ViewModels;
@using Selama.Areas.Admin.ViewModels.Users;
@model UserOverviewViewModel

@{
    ViewBag.Title = "User Overview";
}

<h2>User Overview</h2>

@if (ViewBag.Message != null && !string.IsNullOrWhiteSpace(ViewBag.Message))
{
    <div class="alert alert-success alert-icontext">
        <span class="fa fa-2x fa-check-circle"></span>
        <span>@(new HtmlString(ViewBag.Message))</span>
    </div>
}
@if (ViewBag.ErrorMessage != null && !string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger alert-icontext">
        <span class="fa fa-2x fa-exclamation-circle"></span>
        <span>@(new HtmlString(ViewBag.ErrorMessage))</span>
    </div>

}

<div class="row pager-row">
    <div class="col-md-offset-2 col-md-10">
        @Html.Partial("_PagerPartial", new PagerViewModel(Model))
    </div>
</div>
<div class="row">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => new UserViewModel().Username)
                </th>
                <th>
                    @Html.DisplayNameFor(model => new UserViewModel().Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => new UserViewModel().UserRole)
                </th>
                <th style="text-align: center;">
                    @Html.DisplayNameFor(model => new UserViewModel().IsEmailConfirmed)
                </th>
                <th style="text-align: center;">
                    @Html.DisplayNameFor(model => new UserViewModel().IsActive)
                </th>
                <th style="text-align: center;">
                    Enable/Disable User
                </th>
                <th>
                    @* Commands *@
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr class="user-overview-row" data-user="@user.UserId" data-user-active="@user.IsActive">
                    <td>
                        @Html.DisplayFor(modelItem => user.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.UserRole)
                    </td>
                    <td align="center">
                        @if (user.IsEmailConfirmed)
                        {
                            <span class="fa fa-check text-success"></span>
                        }
                        else
                        {
                            <span class="fa fa-times text-danger"></span>
                        }
                    </td>
                    <td align="center">
                        @if (user.IsActive)
                        {
                            <span class="fa fa-check text-success"></span>
                        }
                        else
                        {
                            <span class="fa fa-times text-danger"></span>
                        }
                    </td>
                    <td align="center">
                        @if (!user.WaitingReview)
                        {
                            if (user.IsActive)
                            {
                                using (Html.BeginForm("DisableUser", "Users", new { page = Model.ViewPageNum }))
                                {
                                    @Html.HiddenFor(modelItem => user.UserId)
                                    <button type="submit" class="btn btn-danger">
                                        Disable
                                    </button>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("EnableUser", "Users", new { page = Model.ViewPageNum }))
                                {
                                    @Html.HiddenFor(modelItem => user.UserId)
                                    <button type="submit" class="btn btn-success">
                                        Enable
                                    </button>
                                }
                            }
                        }
                        else
                        {
                            <text>N/A</text>
                        }
                    </td>
                    <td>
                        @if (user.WaitingReview)
                        {
                            using (Html.BeginForm("ConfirmUser", "Users", new { page = Model.ViewPageNum }))
                            {
                                @Html.HiddenFor(modelItem => user.UserId)
                                <button type="submit" class="btn btn-primary btn-icontext btn-confirm">
                                    <span class="fa fa-check"></span>
                                    Confirm user
                                </button>
                            }
                            using (Html.BeginForm("DenyUser", "Users", new { page = Model.ViewPageNum }))
                            {
                                @Html.HiddenFor(modelItem => user.UserId)
                                <button type="submit" class="btn btn-default btn-icontext btn-deny">
                                    <span class="fa fa-times"></span>
                                    Deny user
                                </button>
                            }
                        }
                        else
                        {
                            <a href='@Url.Action("Edit", new { id = user.UserId })' class="btn btn-default btn-icontext">
                                <span class="fa fa-edit"></span>Edit
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="row pager-row">
    <div class="col-md-offset-2 col-md-10">
        @Html.Partial("_PagerPartial", new PagerViewModel(Model))
    </div>
</div>
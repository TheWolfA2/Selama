@model Selama.Areas.Account.ViewModels.Manage.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Manage your external logins";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (Model.CurrentLogins.Count > 0)
    {
        <h4>Registered Logins</h4>
        <table class="table">
            <tbody>
                @foreach (var account in Model.CurrentLogins)
                {
                    <tr>
                        <td style="font-size: 18px;">

                            @if (account.LoginProvider == "BattleNet")
                            {
                                <div class="btn btn-lg btn-social-icon btn-battlenet">
                                    <span class="fa fa-battlenet"></span>
                                </div>
                                <text>&nbsp; Battle.net</text>
                            }
                            else
                            {
                                <div class="btn btn-lg btn-social-icon btn-@account.LoginProvider.ToLower()">
                                    <span class="fa fa-@account.LoginProvider.ToLower()"></span>
                                </div>
                                <text>&nbsp; @account.LoginProvider</text>
                            }
                        </td>
                        <td>
                            @if (ViewBag.ShowRemoveButton)
                            {
                                using (Html.BeginForm("RemoveLogin", "Manage"))
                                {
                                    @Html.AntiForgeryToken()
                                    <div>
                                        @Html.Hidden("loginProvider", account.LoginProvider)
                                        @Html.Hidden("providerKey", account.ProviderKey)
                                        <input type="submit" class="btn btn-default" value="Remove" title="Remove this @account.LoginProvider login from your account" />
                                    </div>
                                }
                            }
                            else
                            {
                                @: &nbsp;
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    if (Model.OtherLogins.Count > 0)
    {
        using (Html.BeginForm("LinkLogin", "Manage"))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in Model.OtherLogins)
                    {
                        <button type="submit" class="btn btn-lg btn-social btn-@p.AuthenticationType.ToLower()" id="@p.AuthenticationType" name="provider"
                                value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                            <span class="fa fa-@p.AuthenticationType.ToLower()"></span>
                            Associate your @p.Caption account
                        </button>
                        <br />
                    }
                </p>
            </div>
        }
    }
}
